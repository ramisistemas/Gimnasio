// <auto-generated />
using System;
using GymEnCasa.App.Persistencia;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymEnCasa.App.Persistencia.Migrations
{
    [DbContext(typeof(AppContext))]
    [Migration("20220907090209_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("GymEnCasa.App.Dominio.CategoriaNutricional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CategoriaNutricionales");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("NumeroTelefonico")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrimerNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoApellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SegundoNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ConsejoNutricional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CategoriaNutricionalId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoCuerpoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaNutricionalId");

                    b.HasIndex("TipoCuerpoId");

                    b.ToTable("ConsejoNutricionales");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.DificultadEjercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DificultadEjercicios");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Generos");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.Historico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("RutinasEjercicioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("RutinasEjercicioId");

                    b.ToTable("Historicos");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.RutinasEjercicio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("AyudaMultimedia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescripcionEjercicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DificultadEjercicioId")
                        .HasColumnType("int");

                    b.Property<string>("NombreEjercicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZonaTrabajoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DificultadEjercicioId");

                    b.HasIndex("ZonaTrabajoId");

                    b.ToTable("RutinasEjercicios");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.TipoCuerpo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoCuerpos");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ValoracionInicial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Altura")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("Peso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GeneroId");

                    b.ToTable("ValoracionIniciales");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ValoracionNutricionalCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoCuerpoId")
                        .HasColumnType("int");

                    b.Property<float>("estatura")
                        .HasColumnType("real");

                    b.Property<float>("peso")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TipoCuerpoId");

                    b.ToTable("ValoracionNutricionalClientes");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ValoracionRutinasCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("DificultadEjercicioId")
                        .HasColumnType("int");

                    b.Property<float>("estatura")
                        .HasColumnType("real");

                    b.Property<float>("peso")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("DificultadEjercicioId");

                    b.ToTable("ValoracionRutinasClientes");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ZonaTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ZonaTrabajos");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.Cliente", b =>
                {
                    b.HasOne("GymEnCasa.App.Dominio.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ConsejoNutricional", b =>
                {
                    b.HasOne("GymEnCasa.App.Dominio.CategoriaNutricional", "CategoriaNutricional")
                        .WithMany()
                        .HasForeignKey("CategoriaNutricionalId");

                    b.HasOne("GymEnCasa.App.Dominio.TipoCuerpo", "TipoCuerpo")
                        .WithMany()
                        .HasForeignKey("TipoCuerpoId");

                    b.Navigation("CategoriaNutricional");

                    b.Navigation("TipoCuerpo");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.Historico", b =>
                {
                    b.HasOne("GymEnCasa.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GymEnCasa.App.Dominio.RutinasEjercicio", "RutinasEjercicio")
                        .WithMany()
                        .HasForeignKey("RutinasEjercicioId");

                    b.Navigation("Cliente");

                    b.Navigation("RutinasEjercicio");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.RutinasEjercicio", b =>
                {
                    b.HasOne("GymEnCasa.App.Dominio.DificultadEjercicio", "DificultadEjercicio")
                        .WithMany()
                        .HasForeignKey("DificultadEjercicioId");

                    b.HasOne("GymEnCasa.App.Dominio.ZonaTrabajo", "ZonaTrabajo")
                        .WithMany()
                        .HasForeignKey("ZonaTrabajoId");

                    b.Navigation("DificultadEjercicio");

                    b.Navigation("ZonaTrabajo");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ValoracionInicial", b =>
                {
                    b.HasOne("GymEnCasa.App.Dominio.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId");

                    b.Navigation("Genero");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ValoracionNutricionalCliente", b =>
                {
                    b.HasOne("GymEnCasa.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GymEnCasa.App.Dominio.TipoCuerpo", "TipoCuerpo")
                        .WithMany()
                        .HasForeignKey("TipoCuerpoId");

                    b.Navigation("Cliente");

                    b.Navigation("TipoCuerpo");
                });

            modelBuilder.Entity("GymEnCasa.App.Dominio.ValoracionRutinasCliente", b =>
                {
                    b.HasOne("GymEnCasa.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("GymEnCasa.App.Dominio.DificultadEjercicio", "DificultadEjercicio")
                        .WithMany()
                        .HasForeignKey("DificultadEjercicioId");

                    b.Navigation("Cliente");

                    b.Navigation("DificultadEjercicio");
                });
#pragma warning restore 612, 618
        }
    }
}
